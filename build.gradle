
buildscript {
    repositories {
        mavenCentral() // or gradlePluginPortal()
    }
    dependencies {
        classpath("com.dipien:semantic-version-gradle-plugin:2.0.0")
    }
}

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id("maven-publish")
}

version = "2.1.5" // Assign your project version here
group 'org.amplio.csm'
project.ext.prop1 = "csmcompile"
project.ext.snapshot = false
ext.snapshot = false
apply plugin: "com.dipien.semantic-version"

repositories {
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

dependencies {
// https://mvnrepository.com/artifact/net.sourceforge.argparse4j/argparse4j
    implementation 'net.sourceforge.argparse4j:argparse4j:0.8.1'

    implementation 'org.apache.commons:commons-lang3:3.12.0'
    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation 'commons-io:commons-io:2.13.0'

    // https://mvnrepository.com/artifact/org.yaml/snakeyaml
    implementation 'org.yaml:snakeyaml:2.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

shadowJar {
    minimize()
}

jar {
    manifest {
        attributes 'Main-Class': 'org.amplio.csm.CsmMain'
    }
}

test {
    useJUnitPlatform()
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/LiteracyBridge/CSMcompile")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            groupId = group // "org.amplio.csm"
            artifactId = project.ext.prop1
//            version = "2.1"
            from(components.java)
        }
    }
}
